import sys

output = 'soundsystem'

sources = [
            output + '.cc',
            output + '.i',
            
            'FFT.cc',
          ]

baselibrarypath = '../../BaseLibrary/'
          
env = Environment(tools = ['default','swig'])

if env.Detect('swig') == None:
    print 'No SWiG tool detected, install (www.swig.org) it or put it into the $PATH'
    Exit()

if sys.platform == 'darwin':
	env.Append(CCFLAGS=['-D__MACOSX__'])

	env.Append(CPPPATH=['/usr/include/malloc/']) ## malloc.h (Mac OS X)	
	env.Append(CPPPATH=[baselibrarypath])
	
	env.Append(LIBPATH=[baselibrarypath])
	env.Append(LIBS=['vasik','fmodx86','fftw3'])	
	
	env.Replace(SWIGFLAGS='-c++ -lua -I'+baselibrarypath)
	
	env.Replace(SHLINKFLAGS='-bundle -flat_namespace -undefined dynamic_lookup')
	env.Append(SHLINKFLAGS=' -framework Carbon');
	env.Replace(SHLIBPREFIX='')
	env.Replace(SHLIBSUFFIX='.so')
elif sys.platform == 'linux2':
    env.Append(CCFLAGS=['-D__LINUX__'])

    env.Append(CPPPATH=[baselibrarypath])

    env.Append(LIBPATH=[baselibrarypath])
    env.Append(LIBS=['vasik','fmodx86','fftw3'])

    env.Replace(SWIGFLAGS='-c++ -lua -I'+baselibrarypath)

    env.Replace(SHLINKFLAGS='-shared')
    env.Replace(SHLIBPREFIX='')
    env.Replace(SHLIBSUFFIX='.so')

objs = env.SharedObject(sources)

env.SharedLibrary(output,objs)
